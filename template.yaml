AWSTemplateFormatVersion: "2010-09-09"
Description: "VPN Gateway Template for Site-to-Site VPN"

Parameters:
  VPCId:
    Type: String
    Description: "The VPC ID to which the VGW will attach"

  SubnetId:
    Type: String
    Description: "The subnet ID to which the route table will attach"

  CustomerGatewayIP1:
    Type: String
    Description: "The IP address of the Customer Gateway (Azure VPN Gateway 1)"
    Default: "172.178.138.54"

  CustomerGatewayIP2:
    Type: String
    Description: "The IP address of the Customer Gateway (Azure VPN Gateway 1)"
    Default: "172.178.138.60"

  AzureCIDR:
    Type: String
    Description: "The CIDR block of the Azure Vnet"
    Default: "10.0.0.0/16"

  Environment:
    Type: String
    Description: "The environment name (e.g., development, production)"
    AllowedValues:
      - development
      - production
      - default

  PreSharedKey:
    Type: String
    Description: "The PSK used to establish the VPN connection"
    NoEcho: true

Resources:
  # Create a VPN Gateway (VGW)
  VGW:
    Type: AWS::EC2::VPNGateway
    Properties:
      Type: "ipsec.1"
      AmazonSideAsn: 65001
      Tags:
        - Key: Name
          Value: !Sub 'VGW_${Environment}'

  # Attach VGW to VPC
  VGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPCId
      VpnGatewayId: !Ref VGW

  # Define the Customer Gateway (Azure VPN Gateway)
  CustomerGateway1:
    Type: AWS::EC2::CustomerGateway
    Properties:
      IpAddress: !Ref CustomerGatewayIP1
      Type: "ipsec.1"
      BgpAsn: 65002
      Tags:
        - Key: Name 
          Value: !Sub 'AzureVPN1_${Environment}'

  CustomerGateway2:
    Type: AWS::EC2::CustomerGateway
    Properties:
      IpAddress: !Ref CustomerGatewayIP2
      Type: "ipsec.1"
      BgpAsn: 65002
      Tags:
        - Key: Name 
          Value: !Sub 'AzureVPN2_${Environment}'

  # Create the VPN connection between the VGW and Customer Gateway
  VPNConnection1:
    Type: AWS::EC2::VPNConnection
    Properties:
      CustomerGatewayId: !Ref CustomerGateway1
      Type: "ipsec.1"
      VpnGatewayId: !Ref VGW
      StaticRoutesOnly: false
      Tags:
        - Key: Name
          Value: !Sub 'S2SVPN1_${Environment}'
      VpnTunnelOptionsSpecifications:
        - PreSharedKey: !Ref PreSharedKey
          TunnelInsideCidr: "169.254.21.0/30"
    DependsOn: CustomerGateway1

  VPNConnection2:
    Type: AWS::EC2::VPNConnection
    Properties:
      CustomerGatewayId: !Ref CustomerGateway2
      Type: "ipsec.1"
      VpnGatewayId: !Ref VGW
      StaticRoutesOnly: false
      Tags:
        - Key: Name
          Value: !Sub 'S2SVPN2_${Environment}'
      VpnTunnelOptionsSpecifications:
        - PreSharedKey: !Ref PreSharedKey
          TunnelInsideCidr: "169.254.22.0/30"
    DependsOn: CustomerGateway2

  # Create a Route Table for the Subnet
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCId
      Tags:
        - Key: Name
          Value: !Sub 'RouteTable_${Environment}'

  # Add a Route to the VPN Gateway
  RouteToVGW:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref VGW
    DependsOn: VGWAttachment

  # Associate Route Table to the EC2 Subnet
  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetId
      RouteTableId: !Ref RouteTable

Outputs:
  VGWId:
    Description: "The ID of the created VPN Gateway"
    Value: !Ref VGW